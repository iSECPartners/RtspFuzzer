<?xml version="1.0" encoding="utf-8"?>
<Peach xmlns="http://peachfuzzer.com/2012/Peach" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  author="Michael Lynch (iSEC Partners) - mlynch@isecpartners.com"
  description="A fuzzer for clients implementing the RTSP protocol">

  <!--
  Fuzzer for RTSP clients.
  The RTSP protocol is defined as RFC 2326 (http://www.ietf.org/rfc/rfc2326.txt).
  -->

  <!-- Import the definition of SDP, which is used in DESCRIBE responses -->
  <Include ns="sdp" src="file:sdp.xml" />

  <!-- Line containing a header and its value, such as:
    Last-Modified: Thu, 27 Dec 2012 21:12:18 GMT
    ^^^^header^^^  ^^^^^^^^^^^^value^^^^^^^^^^^^ -->
  <DataModel name="RtspHeader">
    <String name="Header" />
    <String value=": " token="true" />
    <String name="Value" />
    <String value="\r\n" token="true" />
  </DataModel>

  <!-- Sequence number field, such as:
      CSeq: 4 -->
  <DataModel name="CSeqModel" ref="RtspHeader">
    <String name="Header" value="CSeq" token="true" />
    <String name="Value">
      <Hint name="NumericalString" value="true" />
    </String>
  </DataModel>

  <!-- RTSP version, such as:
      RTSP/1.0 -->
  <DataModel name="RtspVersion">
    <String value="RTSP" token="true" />
    <String value="/" type="ascii" token="true" />
    <String name="RtspMajorVersion" value="1">
      <Hint name="NumericalString" value="true" />
    </String>
    <String value="." type="ascii" token="true" />
    <String name="RtspMinorVersion" value="0">
      <Hint name="NumericalString" value="true" />
    </String>
  </DataModel>

  <!-- The RTSP request line, such as:
        OPTIONS rtsp://example.com RTSP/1.0 -->
  <DataModel name="RtspVerb">
    <Choice name="VerbChoice">
      <String name="Describe" value="DESCRIBE" token="true" />
      <String name="GetParameter" value="GET_PARAMETER" token="true" />
      <String name="SetParameter" value="SET_PARAMETER" token="true" />
      <String name="Options" value="OPTIONS" token="true" />
      <String name="Pause" value="PAUSE" token="true" />
      <String name="Play" value="PLAY" token="true" />
      <String name="Setup" value="SETUP" token="true" />
      <String name="Teardown" value="TEARDOWN" token="true" />
    </Choice>
  </DataModel>

  <DataModel name="RtspRequestLine">
    <Block name="Method" ref="RtspVerb" />
    <String value=" " type="ascii" token="true" />
    <String name="RequestUri" />
    <String value=" " type="ascii" token="true" />
    <Block name="Version" ref="RtspVersion" />
    <String value="\r\n" token="true" />
  </DataModel>

  <!-- Describes a client RTSP request.
  It defines the bare minimum of the request because defining it with more
  granularity can cause Peach to fail to crack the data or take too long
  to crack it.-->
  <DataModel name="RtspRequestModelSimple">
    <Block name="RequestLine" ref="RtspRequestLine" />

    <String />

    <Block name="Headers">
      <Block name="CSeq" ref="CSeqModel" />
    </Block>

    <String />

  </DataModel>

  <!-- Describes a client RTSP request.
  This is similar to RtspRequestModel, but defines a request more granularly for
  the purposes of mutating requests to send, rather than interpreting requests
  received by the client under test. -->
  <DataModel name="RtspRequestModel">
    <Block name="RequestLine" ref="RtspRequestLine" />

    <Block minOccurs="1" maxOccurs="-1">
      <Choice name="Headers">
        <Block name="CSeq" ref="CSeqModel" />

        <Block name="Unknown" ref="RtspHeader" />
      </Choice>
    </Block>

    <String value="\r\n" token="true" />

    <String name="Body" />

  </DataModel>

  <!-- Data model for the OPTIONS request -->
  <DataModel name="OptionsRequestModel" ref="RtspRequestModel">
    <Block name="Headers.UserAgent" ref="RtspHeader">
      <String name="Header" value="User-Agent" token="true" />
    </Block>
  </DataModel>

  <!-- Data model for the GET_PARAMETER request -->
  <DataModel name="GetParameterRequestModel" ref="RtspRequestModel">

    <Block name="Headers.ContentLength" ref="RtspHeader">
      <String name="Header" value="Content-Length" token="true" />
      <String name="Value">
        <Relation type="size" of="Body" />
      </String>
    </Block>

  </DataModel>

  <!-- Data model for the SET_PARAMETER request -->
  <DataModel name="SetParameterRequestModel" ref="RtspRequestModel">

    <Block name="Headers.ContentLength" ref="RtspHeader">
      <String name="Header" value="Content-Length" token="true" />
      <String name="Value">
        <Relation type="size" of="Body" />
      </String>
    </Block>
    <Block name="Headers.ContentType" ref="RtspHeader">
      <String name="Header" value="Content-Type" token="true" />
      <String name="Value" value="text/parameters" token="true" />
    </Block>

  </DataModel>

  <!-- Model for a full RTSP response -->
  <DataModel name="RtspResponseModel">
    <!--
    Status line of an RTSP response, such as:
      RTSP/1.0 200 OK 
    -->
    <Block name="ResponseStatusLine">
      <Block name="Version" ref="RtspVersion" />
      <String value=" " token="true" />
      <String name="ResponseCode">
        <Hint name="NumericalString" value="true" />
      </String>
      <String value=" " token="true" />
      <String name="ResponseString" />
      <String value="\r\n" token="true" />
    </Block>

    <Block minOccurs="1" maxOccurs="-1">

      <!-- These are the generic headers that can appear in any RTSP response.-->
      <Choice name="Headers">
        <Block name="CSeq" ref="CSeqModel" />

        <!--
      Server banner string header, such as:
        Server: ExampleCo RSTP 1.0
      -->
        <Block name="Server" ref="RtspHeader">
          <String name="Header" value="Server" token="true" />
        </Block>

        <Block name="Connection" ref="RtspHeader">
          <String name="Header" value="Connection" token="true" />
        </Block>

      </Choice>
    </Block>

    <String value="\r\n" token="true" />
  </DataModel>

  <!-- Model for a RTSP response to OPTIONS request -->
  <DataModel name="OptionsResponseModel" ref="RtspResponseModel">
    <!--
    Public header line, such as:
      Public: DESCRIBE, GET_PARAMETER, OPTIONS, PAUSE, PLAY
      -->
    <Block name="Headers.Public" ref="RtspHeader">
      <String name="Header" value="Public" />
      <Block name="Value">
        <Block ref="RtspVerb" />
        <Block minOccurs="0" maxOccurs="8">
          <String value=", " token="true" />
          <Block ref="RtspVerb" />
        </Block>
      </Block>
    </Block>

    <Block name="Headers.ContentLength" ref="RtspHeader">
      <String name="Header" value="Content-Length" />
      <String name="Value">
        <Hint name="NumericalString" value="true" />
      </String>
    </Block>
  </DataModel>

  <!-- Model for a RTSP response to DESCRIBE request -->
  <DataModel name="DescribeResponseModel" ref="RtspResponseModel">
    <Block name="Headers.ContentType" ref="RtspHeader">
      <String name="Header" value="Content-Type" token="true" />
    </Block>
    <Block name="Headers.ContentLanguage" ref="RtspHeader">
      <String name="Header" value="Content-Language" token="true" />
    </Block>
    <Block name="Headers.ContentLocation" ref="RtspHeader">
      <String name="Header" value="Content-Location" token="true" />
    </Block>
    <Block name="Headers.ContentEncoding" ref="RtspHeader">
      <String name="Header" value="Content-Encoding" token="true" />
    </Block>
    <Block name="Headers.CacheControl" ref="RtspHeader">
      <String name="Header" value="Cache-Control" token="true" />
    </Block>
    <Block name="Headers.Date" ref="RtspHeader">
      <String name="Header" value="Date" token="true" />
    </Block>
    <Block name="Headers.Expires" ref="RtspHeader">
      <String name="Header" value="Expires" token="true" />
    </Block>
    <Block name="Headers.LastModified" ref="RtspHeader">
      <String name="Header" value="Last-Modified" token="true" />
    </Block>
    <Block name="Headers.ContentBase" ref="RtspHeader">
      <String name="Header" value="Content-Base" token="true" />
    </Block>
    <Block name="Headers.ContentLength" ref="RtspHeader">
      <String name="Header" value="Content-Length" token="true" />
      <String name="Value">
        <Relation type="size" of="Body" />
      </String>
    </Block>
    <Block name="Headers.Unknown" ref="RtspHeader" />

    <Block ref="sdp:SessionDescriptionModel" name="Body" />
  </DataModel>

  <!-- Model for the Session header including an optional timeout, e.g.:
  
      Session: 3727873911612972623
  
    or
    
      Session: 1234e72f;timeout=90 -->
  <DataModel name="SessionHeaderModel" ref="RtspHeader">
    <String name="Header" value="Session" />
    <Block name="Value">
      <String name="SessionId" />
      <Block name="TimeoutSection" minOccurs="0" maxOccurs="1">
        <String value=";" token="true" />
        <String value="timeout=" token="true" />
        <String name="TimeoutValue">
          <Hint name="NumericalString" value="true" />
        </String>
      </Block>
    </Block>
  </DataModel>

  <!-- Describes the parameters that can appear in a Transport header-->
  <DataModel name="TransportHeaderParametersModel">
    <Choice name="ParametersChoice">
      <Block name="BroadcastTypeBlock">
        <Choice>
          <String name="Unicast" value="unicast" token="true" />
          <String name="Multicast" value="multicast" token="true" />
        </Choice>
      </Block>
      <Block name="DestinationBlock">
        <String value="destination" token="true" />
        <Block name="DestinationAddress" minOccurs="0" maxOccurs="1">
          <String value="=" token="true" />
          <Block name="Address" ref="sdp:IPv4AddressModel" />
        </Block>
      </Block>
      <Block name="SourceBlock">
        <String value="source" token="true" />
        <Block name="SourceAddress" minOccurs="0" maxOccurs="1">
          <String value="=" token="true" />
          <Block name="Address" ref="sdp:IPv4AddressModel" />
        </Block>
      </Block>
      <Block name="InterleavedBlock">
        <String value="interleaved" token="true" />
        <String value="=" token="true" />
        <String name="Channel">
          <Hint name="NumericalString" value="true"/>
        </String>
        <Block name="ChannelRange" minOccurs="0" maxOccurs="1">
          <String value="-" token="true" />
          <String name="ChannelRangeEnd">
            <Hint name="NumericalString" value="true"/>
          </String>
        </Block>
      </Block>
      <Block name="AppendBlock">
        <String value="append" token="true" />
      </Block>
      <Block name="TTLBlock">
        <String value="ttl" token="true" />
        <String value="=" token="true" />
        <String name="TTLValue">
          <Hint name="NumericalString" value="true" />
        </String>
      </Block>
      <Block name="LayersBlock">
        <String value="layers" token="true" />
        <String value="=" token="true" />
        <String name="LayersValue" length="1">
          <Hint name="NumericalString" value="true" />
        </String>
      </Block>
      <Block name="PortBlock">
        <String value="port" token="true" />
        <String value="=" token="true" />
        <String name="Port">
          <Hint name="NumericalString" value="true" />
        </String>
        <Block name="PortRange" minOccurs="0" maxOccurs="1">
          <String value="=" token="true" />
          <String name="PortRangeEnd">
            <Hint name="NumericalString" value="true" />
          </String>
        </Block>
      </Block>
      <Block name="ClientPortBlock">
        <String value="client_port" token="true" />
        <String value="=" token="true" />
        <String name="Port">
          <Hint name="NumericalString" value="true" />
        </String>
        <Block name="PortRange" minOccurs="0" maxOccurs="1">
          <String value="-" token="true" />
          <String name="PortRangeEnd">
            <Hint name="NumericalString" value="true" />
          </String>
        </Block>
      </Block>
      <Block name="ServerPortBlock">
        <String value="server_port" token="true" />
        <String value="=" token="true" />
        <String name="Port">
          <Hint name="NumericalString" value="true" />
        </String>
        <Block name="PortRange" minOccurs="0" maxOccurs="1">
          <String value="-" token="true" />
          <String name="PortRangeEnd">
            <Hint name="NumericalString" value="true" />
          </String>
        </Block>
      </Block>
      <Block name="SSRCBlock">
        <String value="ssrc" token="true" />
        <String value="=" token="true" />
        <String name="SSRC" length="8" constraint="re.search('^[0-9a-fA-F]{8}$', value) != None" />
      </Block>
      <Block name="ModeBlock">
        <String value="mode" token="true" />
        <String value="=" token="true" />
        <String value="&quot;" token="true" minOccurs="0" maxOccurs="1" />
        <Choice>
          <String value="play" token="true" />
          <String value="record" token="true" />
          <String value="PLAY" token="true" />
          <String value="RECORD" token="true" />
        </Choice>
        <String value="&quot;" token="true" minOccurs="0" maxOccurs="1" />
      </Block>
    </Choice>
  </DataModel>

  <!-- Model for the Transport header in an RTSP response, such as:
      Transport: RTP/AVP;unicast;client_port=58526-58527 -->
  <DataModel name="TransportHeaderModel" ref="RtspHeader">
    <String name="Header" value="Transport" token="true" />
    <Block name="Value">
      <Block name="Transport">
        <String name="TransportProtocol" value="RTP" />
        <String value="/" token="true" />
        <String name="Profile" value="AVP" />
        <Block name="LowerTransportSection" minOccurs="0" maxOccurs="1">
          <String value="/" token="true" />
          <Choice name="LowerTransportValue">
            <String name="LowerTransportTCP" value="TCP" token="true" />
            <String name="LowerTransportUDP" value="UDP" token="true" />
          </Choice>
        </Block>
        <String name="TransportTerminator" value=";" token="true" />
      </Block>
      <Block name="TransportParameters" minOccurs="0" maxOccurs="11">
        <Block ref="TransportHeaderParametersModel" />
        <String value=";" token="true" />
      </Block>
      <Block ref="TransportHeaderParametersModel" minOccurs="0" maxOccurs="1" />
    </Block>
  </DataModel>

  <!-- Model for a RTSP response to SETUP request -->
  <DataModel name="SetupResponseModel" ref="RtspResponseModel">
    <Block name="Headers.Session" ref="SessionHeaderModel" />
    <Block name="Headers.Transport" ref="TransportHeaderModel" />
    <Block name="Headers.CacheControl" ref="RtspHeader">
      <String name="Header" value="Cache-Control" token="true" />
    </Block>
    <Block name="Headers.Date" ref="RtspHeader">
      <String name="Header" value="Date" token="true" />
    </Block>
    <Block name="Headers.Expires" ref="RtspHeader">
      <String name="Header" value="Expires" token="true" />
    </Block>
    <Block name="Headers.LastModified" ref="RtspHeader">
      <String name="Header" value="Last-Modified" token="true" />
    </Block>
  </DataModel>

  <!-- Model for a RTSP response to PLAY request -->
  <DataModel name="PlayResponseModel" ref="RtspResponseModel">
    <Block name="Headers.Session" ref="SessionHeaderModel" />
    <Block name="Headers.Range" ref="RtspHeader">
      <String name="Header" value="Range" token="true" />
    </Block>
    <Block name="Headers.RtpInfo" ref="RtspHeader">
      <String name="Header" value="RTP-Info" token="true" />
    </Block>
    <Block name="Headers.Scale" ref="RtspHeader">
      <String name="Header" value="Scale" token="true" />

      <!-- Defines a positive or negative decimal value, e.g. "-1.5" -->
      <Block name="Value">
        <String value="-" token="true" minOccurs="0" maxOccurs="1" />
        <String>
          <Hint name="NumericString" value="true" />
        </String>
        <String value="." token="true" />
        <String>
          <Hint name="NumericString" value="true" />
        </String>
      </Block>
    </Block>
    <Block name="Headers.Speed" ref="RtspHeader">
      <String name="Header" value="Speed" token="true" />
      <!-- Defines a positive decimal value, e.g. "1.5" -->
      <Block name="Value">
        <String>
          <Hint name="NumericString" value="true" />
        </String>
        <String value="." token="true" />
        <String>
          <Hint name="NumericString" value="true" />
        </String>
      </Block>
    </Block>
  </DataModel>

  <StateModel name="RtspStateModel" initialState="StartingState">
    <State name="StartingState">

      <!-- Start listening asynchronously for incoming connection -->
      <Action type="start" publisher="RtspServer" />

      <Action type="call" method="launchProgram" publisher="Peach.Agent" />

      <Action type="accept" publisher="RtspServer" />

      <Action type="changeState" ref="RouteRequest" />
    </State>

    <!-- This state is currently unused but can be used for sending a GET_PARAMETER
    request to a client. -->
    <State name="PerformGetParameterRequest">
      <Action name="SendGetParameterRequest" type="output" publisher="RtspServer">
        <DataModel ref="GetParameterRequestModel" />
        <Data fileName="data/get-parameter-request.txt" />
      </Action>
    </State>

    <State name="RouteRequest">

      <!-- Wait for client to send data. -->
      <Action name="ReceiveClientRequest" type="input" publisher="RtspServer">
        <DataModel ref="RtspRequestModelSimple" />
      </Action>

      <Action type="changeState" ref="ProcessOptionsRequest" when="str(getattr(StateModel.states['RouteRequest'].actions[0].dataModel.find('RequestLine.Method.VerbChoice.Options'), 'DefaultValue', None)) == 'OPTIONS'" />
      <Action type="changeState" ref="ProcessDescribeRequest" when="str(getattr(StateModel.states['RouteRequest'].actions[0].dataModel.find('RequestLine.Method.VerbChoice.Describe'), 'DefaultValue', None)) == 'DESCRIBE'" />
      <Action type="changeState" ref="ProcessSetupRequest" when="str(getattr(StateModel.states['RouteRequest'].actions[0].dataModel.find('RequestLine.Method.VerbChoice.Setup'), 'DefaultValue', None)) == 'SETUP'" />
      <Action type="changeState" ref="ProcessPlayRequest" when="str(getattr(StateModel.states['RouteRequest'].actions[0].dataModel.find('RequestLine.Method.VerbChoice.Play'), 'DefaultValue', None)) == 'PLAY'" />
      <Action type="changeState" ref="ProcessPauseRequest" when="str(getattr(StateModel.states['RouteRequest'].actions[0].dataModel.find('RequestLine.Method.VerbChoice.Pause'), 'DefaultValue', None)) == 'PAUSE'" />
    </State>

    <State name="ProcessOptionsRequest">

      <!-- Grab the CSeq number from the requst and apply it to the response -->
      <Action type="slurp" valueXpath="//RouteRequest//ReceiveClientRequest//RtspRequestModelSimple//Headers//CSeq//Value" setXpath="//OptionsResponseModel//Headers//CSeq//Value" />

      <Action name="SendClientResponse" type="output" publisher="RtspServer">
        <DataModel ref="OptionsResponseModel" />
        <Data fileName="data/options-response1.txt" />
      </Action>

      <Action type="changeState" ref="RouteRequest" />
    </State>

    <State name="ProcessDescribeRequest">

      <!-- Grab the CSeq number from the requst and apply it to the response -->
      <Action type="slurp" valueXpath="//RouteRequest//ReceiveClientRequest//RtspRequestModelSimple//Headers//CSeq//Value" setXpath="//DescribeResponseModel//Headers//CSeq//Value" />

      <Action type="output" publisher="RtspServer">
        <DataModel ref="DescribeResponseModel" />
        <Data fileName="data/describe-response1.txt" />
      </Action>

      <Action type="changeState" ref="RouteRequest" />
    </State>

    <State name="ProcessSetupRequest">

      <!-- Grab the CSeq number from the requst and apply it to the response -->
      <Action type="slurp" valueXpath="//RouteRequest//ReceiveClientRequest//RtspRequestModelSimple//Headers//CSeq//Value" setXpath="//SetupResponseModel//Headers//CSeq//Value" />

      <Action type="output" publisher="RtspServer">
        <DataModel ref="SetupResponseModel" />
        <Data fileName="data/setup-response3.txt" />
      </Action>

      <Action type="changeState" ref="RouteRequest" />
    </State>

    <State name="ProcessPlayRequest">

      <!-- Grab the CSeq number from the requst and apply it to the response -->
      <Action type="slurp" valueXpath="//RouteRequest//ReceiveClientRequest//RtspRequestModelSimple//Headers//CSeq//Value" setXpath="//PlayResponseModel//Headers//CSeq//Value" />

      <!-- Send a fuzzed response to client -->
      <Action type="output" publisher="RtspServer">
        <DataModel ref="PlayResponseModel" />
        <Data fileName="data/play-response1.txt" />
      </Action>
      
      <!-- Send a fuzzed OPTIONS request to client -->
      <Action type="output" publisher="RtspServer">
        <DataModel ref="OptionsRequestModel" />
        <Data fileName="data/options-request1.txt" />
      </Action>

      <!-- Send a fuzzed GET_PARAMETER request to client -->
      <Action type="output" publisher="RtspServer">
        <DataModel ref="GetParameterRequestModel" />
        <Data fileName="data/get-parameter-request.txt" />
      </Action>

      <!-- Send a fuzzed SET_PARAMETER request to client -->
      <Action type="output" publisher="RtspServer">
        <DataModel ref="SetParameterRequestModel" />
        <Data fileName="data/set-parameter-request1.txt" />
      </Action>
    </State>

    <State name="ProcessPauseRequest">

      <!-- Grab the CSeq number from the requst and apply it to the response -->
      <Action type="slurp" valueXpath="//RouteRequest//ReceiveClientRequest//RtspRequestModelSimple//Headers//CSeq//Value" setXpath="//CSeq//Value" />

      <!-- Send a fuzzed response to client -->
      <Action type="output" publisher="RtspServer">
        <DataModel ref="RtspResponseModel" />
        <Data fileName="data/generic-ok-response.txt" />
      </Action>

      <Action type="changeState" ref="RouteRequest" />
    </State>

  </StateModel>

  <Agent name="QuickTimeAgent">
    <Monitor class="PageHeap">
      <Param name="Executable" value="QuickTimePlayer.exe" />
    </Monitor>
    <Monitor class="WindowsDebugger">
      <Param name="CommandLine" value="##QuickTimePath##QuickTimePlayer.exe rtsp://127.0.0.1/foo/bar.mp4" />
      <Param name="NoCpuKill" value="true" />
      <Param name="FaultOnEarlyExit" value="true" />
      <Param name="WaitForExitTimeout" value="0" />
      <Param name="StartOnCall" value="launchProgram" />
    </Monitor>
  </Agent>

  <Agent name="VlcAgent">
    <Monitor class="PageHeap">
      <Param name="Executable" value="vlc.exe" />
    </Monitor>
    <Monitor class="WindowsDebugger">
      <Param name="CommandLine" value="##VlcPath##vlc.exe -I dummy rtsp://127.0.0.1:554/foo/bar.mp4" />
      <Param name="NoCpuKill" value="true" />
      <Param name="FaultOnEarlyExit" value="true" />
      <Param name="WaitForExitTimeout" value="0" />
      <Param name="StartOnCall" value="launchProgram" />
    </Monitor>
  </Agent>

  <Agent name="OpenRtspAgent">
    <Monitor class="PageHeap">
      <Param name="Executable" value="openRTSP.exe" />
    </Monitor>
    <Monitor class="WindowsDebugger">
      <Param name="CommandLine" value="##OpenRtspPath##openRTSP.exe rtsp://127.0.0.1:554/foo/bar.mp4" />
      <Param name="NoCpuKill" value="true" />
      <Param name="FaultOnEarlyExit" value="false" />
      <Param name="StartOnCall" value="launchProgram" />
    </Monitor>
  </Agent>

  <Agent name="WindowsMediaPlayerAgent">
    <Monitor class="PageHeap">
      <Param name="Executable" value="wmplayer.exe" />
    </Monitor>
    <Monitor class="WindowsDebugger">
      <Param name="CommandLine" value="##WindowsMediaPlayerPath##wmplayer.exe rtsp://127.0.0.1:554/foo/bar.mp4" />
      <Param name="NoCpuKill" value="true" />
      <Param name="FaultOnEarlyExit" value="false" />
      <Param name="StartOnCall" value="launchProgram" />
    </Monitor>
  </Agent>

  <Test name="QuickTime">
    <Agent ref="QuickTimeAgent"/>
    <StateModel ref="RtspStateModel" />

    <!-- Because of the size of the models in this pit, this mutator
     causes Peach to hang for a very long time, so we exclude it. -->
    <Mutators mode="exclude">
      <Mutator class="ArrayVarianceMutator" />
    </Mutators>

    <Publisher name="RtspServer" class="TcpListener">
      <Param name="Interface" value="127.0.0.1" />
      <Param name="Port" value="554" />
      <!-- Accept timeout is very long because it needs to wait for the program under test to launch, which can take
      minutes on slow machines. -->
      <Param name="AcceptTimeout" value="300000" />
      <Param name="Timeout" value="500" />
    </Publisher>

    <Logger class="logger.Filesystem">
      <Param name="Path" value="logs" />
    </Logger>
  </Test>

  <Test name="Vlc">
    <Agent ref="VlcAgent"/>
    <StateModel ref="RtspStateModel" />

    <!-- Because of the size of the models in this pit, this mutator
     causes Peach to hang for a very long time, so we exclude it. -->
    <Mutators mode="exclude">
      <Mutator class="ArrayVarianceMutator" />
    </Mutators>

    <Publisher name="RtspServer" class="TcpListener">
      <Param name="Interface" value="127.0.0.1" />
      <Param name="Port" value="554" />
      <!-- Accept timeout is very long because it needs to wait for the program under test to launch, which can take
      minutes on slow machines. -->
      <Param name="AcceptTimeout" value="300000" />
      <Param name="Timeout" value="500" />
    </Publisher>

    <Logger class="logger.Filesystem">
      <Param name="Path" value="logs" />
    </Logger>
  </Test>

  <Test name="OpenRtsp">
    <Agent ref="OpenRtspAgent"/>
    <StateModel ref="RtspStateModel" />

    <!-- Because of the size of the models in this pit, this mutator
     causes Peach to hang for a very long time, so we exclude it. -->
    <Mutators mode="exclude">
      <Mutator class="ArrayVarianceMutator" />
    </Mutators>

    <Publisher name="RtspServer" class="TcpListener">
      <Param name="Interface" value="127.0.0.1" />
      <Param name="Port" value="554" />
      <Param name="AcceptTimeout" value="2000" />
      <Param name="Timeout" value="500" />
    </Publisher>

    <Logger class="logger.Filesystem">
      <Param name="Path" value="logs" />
    </Logger>
  </Test>

  <Test name="WindowsMediaPlayer">
    <Agent ref="WindowsMediaPlayerAgent"/>
    <StateModel ref="RtspStateModel" />

    <!-- Because of the size of the models in this pit, this mutator
     causes Peach to hang for a very long time, so we exclude it. -->
    <Mutators mode="exclude">
      <Mutator class="ArrayVarianceMutator" />
    </Mutators>

    <Publisher name="RtspServer" class="TcpListener">
      <Param name="Interface" value="127.0.0.1" />
      <Param name="Port" value="554" />
      <Param name="AcceptTimeout" value="2000" />
      <Param name="Timeout" value="500" />
    </Publisher>

    <Logger class="logger.Filesystem">
      <Param name="Path" value="logs" />
    </Logger>
  </Test>

</Peach>
